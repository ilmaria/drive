// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as $$Array            from "bs-platform/lib/es6/array.js";
import * as Curry              from "bs-platform/lib/es6/curry.js";
import * as React              from "react";
import * as $$String           from "bs-platform/lib/es6/string.js";
import * as ReasonReact        from "reason-react/src/ReasonReact.js";
import * as Js_primitive       from "bs-platform/lib/es6/js_primitive.js";
import * as Types$EasyDrive    from "../Types.bs.js";
import * as Utils$EasyDrive    from "../../Utils.bs.js";
import * as FileItem$EasyDrive from "./FileItem.bs.js";

(( require('./FolderView.css') ));

var component = ReasonReact.statelessComponent("FolderView");

function make(js_files, current_file, on_click_file, _) {
  var file_to_list_item = function (file) {
    var selected = current_file ? +(current_file[0][/* id */0] === file[/* id */0]) : /* false */0;
    return React.createElement("div", {
                key: file[/* id */0],
                onClick: Curry._1(on_click_file, Types$EasyDrive.fileToJs(file))
              }, React.createElement("li", undefined, ReasonReact.element(/* None */0, /* None */0, FileItem$EasyDrive.make(file[/* name */1], selected, file[/* iconLink */4], /* array */[]))));
  };
  var foldersFirst = function (a, b) {
    var a_is_folder = +(a[/* mimeType */5] === "application/vnd.google-apps.folder");
    if (a[/* mimeType */5] === b[/* mimeType */5]) {
      return $$String.compare(a[/* name */1], b[/* name */1]);
    } else if (a_is_folder) {
      return -1;
    } else {
      return 1;
    }
  };
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      if (js_files) {
        var files = $$Array.map(Types$EasyDrive.fileFromJs, js_files[0]);
        return React.createElement("ul", {
                    className: "m0 px2"
                  }, ($$Array.sort(foldersFirst, files), Utils$EasyDrive.arrayElem($$Array.map(file_to_list_item, files))));
      } else {
        return React.createElement("p", undefined, Utils$EasyDrive.stringElem("Loading files..."));
      }
    });
  return newrecord;
}

var $$default = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        return make(Js_primitive.null_undefined_to_opt(jsProps.files), Js_primitive.null_undefined_to_opt(jsProps.currentFile), jsProps.onClickFile, /* array */[]);
      }));

export {
  component ,
  make      ,
  $$default ,
  $$default   as default,
  
}
/*  Not a pure module */
