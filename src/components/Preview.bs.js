// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE

import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as Pdf$ReactTemplate from "./Pdf.bs.js";
import * as Image$ReactTemplate from "./Image.bs.js";
import * as Utils$ReactTemplate from "../Utils.bs.js";
import * as Markdown$ReactTemplate from "./Markdown.bs.js";

(( require('./Preview.css') ));

var component = ReasonReact.statelessComponent("Preview");

function make(file, _) {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      var webContentLink = file[/* webContentLink */4];
      var url = (webContentLink == null) ? "" : webContentLink.replace("export=download", "export=view");
      var match = file[/* mimeType */6];
      switch (match) {
        case "application/pdf" : 
            return ReasonReact.element(/* None */0, /* None */0, Pdf$ReactTemplate.make(url, /* array */[]));
        case "image/jpeg" : 
            return ReasonReact.element(/* None */0, /* None */0, Image$ReactTemplate.make(url, file[/* name */1], /* array */[]));
        case "text/x-markdown" : 
            return ReasonReact.element(/* None */0, /* None */0, Markdown$ReactTemplate.make("Markdown content placeholder", /* array */[]));
        default:
          return Utils$ReactTemplate.stringElem("Preview");
      }
    });
  return newrecord;
}

export {
  component ,
  make ,
  
}
/*  Not a pure module */
