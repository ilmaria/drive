// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE

import * as Jest from "@glennsl/bs-jest/src/jest.js";
import * as Curry from "bs-platform/lib\\es6/curry.js";
import * as CamlinternalOO from "bs-platform/lib\\es6/camlinternalOO.js";
import * as GoogleDrive$Drive from "../GoogleDrive.bs.js";

var shared = [
  "listen",
  "get"
];

var mock_user = /* record */[
  /* id */"id",
  /* name */"name",
  /* imageUrl */"url",
  /* email */"email"
];

var $$class = CamlinternalOO.create_table(["getBasicProfile"]);

var getBasicProfile = CamlinternalOO.get_method_label($$class, "getBasicProfile");

CamlinternalOO.set_method($$class, getBasicProfile, (function (_, _$1) {
        return GoogleDrive$Drive.userToJs(mock_user);
      }));

CamlinternalOO.init_class($$class);

var mock_google_user = CamlinternalOO.create_object_opt(0, $$class);

var $$class$1 = CamlinternalOO.create_table(shared);

var ids = CamlinternalOO.get_method_labels($$class$1, shared);

var listen = ids[0];

var get = ids[1];

CamlinternalOO.set_methods($$class$1, /* array */[
      get,
      (function (_, _$1) {
          return mock_google_user;
        }),
      listen,
      (function (_, _$1) {
          return /* () */0;
        })
    ]);

CamlinternalOO.init_class($$class$1);

var mock_current_user = CamlinternalOO.create_object_opt(0, $$class$1);

var mock_auth_instance = {
  currentUser: mock_current_user
};

describe("GoogleDrive", (function () {
        Jest.testAsync(/* None */0, "should initialize", (function (assertion) {
                return GoogleDrive$Drive.init((function () {
                              return Curry._1(assertion, Jest.pass);
                            }));
              }));
        return Jest.testAsync(/* None */0, "login should change user", (function (assertion) {
                      return GoogleDrive$Drive.init((function (token) {
                                    GoogleDrive$Drive.listen_user_changes(token, (function (user) {
                                            return Curry._1(assertion, Jest.Expect[/* toBe */2](/* Some */[mock_user], Jest.Expect[/* expect */0](user)));
                                          }));
                                    return /* () */0;
                                  }));
                    }));
      }));

export {
  mock_user ,
  mock_google_user ,
  mock_current_user ,
  mock_auth_instance ,
  
}
/* class Not a pure module */
